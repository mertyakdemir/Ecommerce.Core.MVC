@model Ecommerce.UI.ViewModel.ProductViewModel

@{
    ViewData["Title"] = "Store";
}


<div class="row index-row">
    @await Component.InvokeAsync("Sidebar")
    <div class="col-md-9">
        <div class="row no-gutters justify-content-around">
            @foreach (var item in Model.Products)
            {
                <div class="card col-md-3" style="width: 18rem;">
                    <img class="card-img-top" src="~/Images/@item.ProductImage" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">@item.Id - @item.ProductName</h5>
                        <p class="card-text">@item.ProductDescription</p>
                        <p><bold>@item.ProductPrice</bold></p>
                        <button class="btn btn-success">@Html.ActionLink("Details", "Details", "Store", new { id = item.Id }, new { @style = "color:white" })</button>
                        <button class="btn btn-primary">Add to cart</button>
                    </div>
                </div>
            }
        </div>
        <div class="row no-gutters justify-content-center">
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    @for (int i = 0; i < Model.Pagination.SumPages(); i++)

                        @if (String.IsNullOrEmpty(Model.Pagination.CurrentCategory))
                        {
                            <li class="page-item @(Model.Pagination.CurrentPage==i+1 ? "active" : "")"><a class="page-link" href="/products?page=@(i+1)">@(i+1)</a></li>

                        }

                        else
                        {
                            <li class="page-item @(Model.Pagination.CurrentPage==i+1 ? "active" : "")"><a class="page-link" href="/products/@Model.Pagination.CurrentCategory?page=@(i+1)">@(i+1)</a></li>
                        }
                </ul>
            </nav>
        </div>
    </div>
</div>
